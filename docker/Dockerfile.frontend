# Build stage
FROM node:18-alpine as build

WORKDIR /app

# Copy root package files
COPY package*.json ./
COPY frontend/package*.json ./frontend/

# Install dependencies using workspace
RUN npm ci  # Changed from npm install for more deterministic builds

# Copy frontend source
COPY frontend ./frontend

WORKDIR /app/frontend

# Build the application
RUN npm run build

# Production stage
FROM nginx:alpine

# Install curl and necessary utilities for healthcheck
RUN apk add --no-cache curl wget ca-certificates

# Copy custom nginx config
COPY docker/nginx.conf /etc/nginx/conf.d/default.conf

# Copy built assets from builder stage
COPY --from=build /app/frontend/dist /usr/share/nginx/html

# Add healthcheck
HEALTHCHECK --interval=30s --timeout=5s --start-period=15s --retries=3 \
    CMD curl -f http://localhost:80/health || exit 1

# Create nginx user if it doesn't exist and set proper permissions
RUN adduser -D -H -u 101 -s /sbin/nologin nginx || true && \
    chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Switch to non-root user
USER nginx

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]