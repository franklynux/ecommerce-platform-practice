FROM node:18-alpine as build

WORKDIR /app
COPY package*.json ./
COPY frontend/package*.json ./frontend/
RUN npm ci
COPY frontend ./frontend
WORKDIR /app/frontend
RUN npm run build

FROM nginx:alpine

RUN apk add --no-cache curl

# Remove default nginx static files
RUN rm -rf /usr/share/nginx/html/* /etc/nginx/conf.d/*

# Create temp directories in /tmp
RUN mkdir -p /tmp/nginx/client_temp \
             /tmp/nginx/proxy_temp \
             /tmp/nginx/fastcgi_temp \
             /tmp/nginx/uwsgi_temp \
             /tmp/nginx/scgi_temp \
             /usr/share/nginx/html \
    && chmod -R 777 /tmp/nginx \
    && chown -R nginx:nginx /usr/share/nginx/html

COPY --from=build /app/frontend/dist /usr/share/nginx/html
COPY docker/nginx.conf /etc/nginx/nginx.conf
COPY docker/default.conf /etc/nginx/conf.d/default.conf

RUN echo "OK" > /usr/share/nginx/html/health.txt \
    && chmod 644 /usr/share/nginx/html/health.txt

HEALTHCHECK --interval=30s --timeout=5s --start-period=15s --retries=3 \
    CMD curl -f http://localhost:80/health.txt || exit 1

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]