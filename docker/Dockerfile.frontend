# Build stage
FROM node:18-alpine as build

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY frontend/package*.json ./frontend/

# Install dependencies using workspace
RUN npm ci

# Copy frontend source
COPY frontend ./frontend

WORKDIR /app/frontend

# Build the application
RUN npm run build

# Production stage
FROM nginx:alpine

# Install necessary utilities
RUN apk add --no-cache curl wget ca-certificates

# Remove default nginx static files and config
RUN rm -rf /usr/share/nginx/html/* && \
    rm -f /etc/nginx/conf.d/* && \
    rm -f /etc/nginx/nginx.conf

# Create necessary directories with proper permissions
RUN mkdir -p /tmp/nginx && \
    mkdir -p /tmp/client_temp \
             /tmp/proxy_temp \
             /tmp/fastcgi_temp \
             /tmp/uwsgi_temp \
             /tmp/scgi_temp \
             /var/cache/nginx \
             /var/run/nginx \
             /usr/share/nginx/html && \
    chown -R nginx:nginx /tmp/nginx && \
    chown -R nginx:nginx /tmp && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/run/nginx && \
    chown -R nginx:nginx /usr/share/nginx/html

# Copy nginx configuration files to the correct locations
COPY docker/nginx.conf /etc/nginx/nginx.conf
COPY docker/default.conf /etc/nginx/conf.d/default.conf

# Set proper permissions for nginx configs
RUN chown -R nginx:nginx /etc/nginx && \
    chmod 644 /etc/nginx/nginx.conf && \
    chmod 644 /etc/nginx/conf.d/default.conf

# Copy built assets from builder stage
COPY --from=build /app/frontend/dist /usr/share/nginx/html

# Create health check file
RUN echo "OK" > /usr/share/nginx/html/health.txt && \
    chown nginx:nginx /usr/share/nginx/html/health.txt && \
    chmod 644 /usr/share/nginx/html/health.txt

# Add healthcheck
HEALTHCHECK --interval=30s --timeout=5s --start-period=15s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:80/health.txt || exit 1

# Environment variables for nginx paths
ENV NGINX_ENTRYPOINT_QUIET_LOGS=1 \
    NGINX_TEMP_PATH=/tmp/nginx \
    NGINX_PROXY_TEMP_PATH=/tmp/nginx/proxy_temp \
    NGINX_CLIENT_TEMP_PATH=/tmp/nginx/client_temp \
    NGINX_FASTCGI_TEMP_PATH=/tmp/nginx/fastcgi_temp \
    NGINX_UWSGI_TEMP_PATH=/tmp/nginx/uwsgi_temp \
    NGINX_SCGI_TEMP_PATH=/tmp/nginx/scgi_temp

EXPOSE 80

USER nginx

CMD ["nginx", "-g", "daemon off;"]