# Build stage
FROM node:18-alpine as build

WORKDIR /app

# Copy root package files
COPY package*.json ./
COPY frontend/package*.json ./frontend/

# Install dependencies
RUN npm ci

# Copy frontend source
COPY frontend ./frontend

WORKDIR /app/frontend

# Build the application
RUN npm run build

# Production stage
FROM nginx:alpine

# Install curl and utilities
RUN apk add --no-cache curl wget ca-certificates

# Create required directories with proper permissions
RUN mkdir -p /var/cache/nginx/client_temp /tmp/client_temp /tmp/proxy_temp /tmp/fastcgi_temp /tmp/uwsgi_temp /tmp/scgi_temp && \
    chown -R nginx:nginx /var/cache/nginx /tmp

# Copy custom nginx config
COPY docker/nginx.conf /etc/nginx/conf.d/default.conf

# Copy built assets
COPY --from=build /app/frontend/dist /usr/share/nginx/html

# Switch to non-root user
USER nginx

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
