# Build stage
FROM node:18-alpine

# Add necessary build tools and utilities
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    wget \
    curl

WORKDIR /app

# Copy package files first to leverage Docker cache
COPY package*.json ./
COPY backend/package*.json ./backend/

# Install dependencies with exact versions
RUN npm ci --production

# Copy backend source
COPY backend/ ./backend/

WORKDIR /app/backend

# Environment configuration
ENV NODE_ENV=production \
    PORT=5000 \
    NPM_CONFIG_LOGLEVEL=warn

# Create non-root user and set permissions
RUN addgroup -S nodejs && \
    adduser -S nodejs -G nodejs && \
    chown -R nodejs:nodejs /app

# Health check with proper timeouts and configuration
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:5000/api/health || exit 1

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 5000

# Use explicit node command instead of npm for better process handling
CMD ["node", "src/index.js"]