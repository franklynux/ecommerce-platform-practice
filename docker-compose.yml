version: '3'
services:
  backend:
    container_name: pet-accessories-backend
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    ports:
      - "5000:5000"
    environment:
      - MONGODB_URI=mongodb+srv://franklynux:admin123@testcluster.40akg.mongodb.net/pet-accessories
      - NODE_ENV=development
      - PORT=5000
    dns:
      - 8.8.8.8
      - 8.8.4.4
    depends_on:
      - mongo
    volumes:
      - ./backend:/app/backend
      - node_modules_backend:/app/backend/node_modules
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    container_name: pet-accessories-frontend
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    ports:
      - "3000:80"
    dns:
      - 8.8.8.8
      - 8.8.4.4
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend:/app/frontend
      - node_modules_frontend:/app/frontend/node_modules
      - nginx_temp:/tmp/nginx
      - nginx_cache:/var/cache/nginx
    tmpfs:
      - /tmp
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health.txt"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongo:
    container_name: pet-accessories-mongo
    image: mongo:latest
    ports:
      - "27017:27017"
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - mongo-data:/data/db
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  app_network:
    driver: bridge

volumes:
  node_modules_backend:
  node_modules_frontend:
  mongo-data:
  nginx_temp:
  nginx_cache: